//SSBM FSM Creator
//main_file.cpp
//Justyn P. Durnford
//Created on 12/17/2019
//Last Updated on 12/18/2019

#include "FSM.hpp"

#define WIN32
#include <FL/Fl_Window.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Multiline_Output.H>
#include <FL/Fl_Button.H>
#include <Fl/Fl_Input_Choice.H>
#include <Fl/Fl_Widget.H>
#include <FL/fl_ask.H>

#include <string>
using std::string;
using std::to_string;
using std::stoi;
using std::stof;

#include <array>
using std::array;

#include <vector>
using std::vector;

#include <sstream>
using std::ostringstream;

#include <algorithm>
using std::sort;

#include <iostream>
using std::cout;
using std::endl;
using std::hex;

//0-53: common
//53-69: Captain Falcon
//70-91: Donkey Kong
//92-117: Fox
//118-145: Game&Watch
//
//
//
const array<string, 146> subaction_names =
{
	"Spot Dodge", "Forward Roll", "Back Roll",
	"Air Dodge", "Jab 1", "Jab 2",
	"Jab 3", "Rapid Jab Start", "Rapid Jab Loop",
	"Rapid Jab End", "Dash Attack", "Side Tilt High",
	"Side Tilt Midhigh", "Side Tilt Middle", "Side Tilt Midlow",
	"Side Tilt Low", "Up Tilt", "Down Tilt",
	"Side Smash High", "Side Smash Midhigh", "Side Smash Middle",
	"Side Smash Midlow", "Side Smash Low", "Up Smash",
	"Down Smash", "Neutral Aerial", "Foward Aerial",
	"Back Aerial", "Up Aerial", "Down Aerial",
	"Neutral Tech", "Forward Tech", "Back Tech",
	"Wall Tech", "Wall Jump Tech", "Ceiling Tech",
	"Ledge Getup Slow", "Ledge Getup Fast", "Ledge Attack Slow",
	"Ledge Attack Fast", "Ledge Roll Slow", "Ledge Roll Fast",
	"Ledge Jump 1 Slow", "Ledge Jump 2 Slow", "Ledge Jump 1 Fast",
	"Ledge Jump 2 Fast", "Left Taunt", "Right Taunt",
	"Grab", "Dash Grab", "Forward Throw",
	"Back Throw", "Up Throw", "Down Throw",
	"Falcon Punch (Ground)", "Falcon Punch (Aerial)", "Raptor Boost Start (Ground)",
	"Raptor Boost (Ground)", "Raptor Boost Start (Aerial)", "Raptor Boost (Aerial)",
	"Falcon Dive (Ground)", "Falcon Dive (Aerial)", "Falcon Dive Grab",
	"Falcon Dive Release", "Falcon Kick (Ground)", "Falcon Kick End (Ground)",
	"Falcon Kick (Aerial)", "Falcon Kick Aerial Landing", "Falcon Kick (Ground End in Air)",
	"Falcon Kick (Aerial End in Air)", "Cargo Foward Throw", "Cargo Back Throw",
	"Cargo Up Throw", "Cargo Down Throw", "Giant Punch Start (Ground)",
	"Giant Punch Loop (Ground)", "Giant Punch Cancel (Ground)", "Giant Punch (Ground)",
	"Giant Punch (2)(Ground)", "Giant Punch Start (Aerial)", "Giant Punch Loop (Aerial)",
	"Giant Punch Cancel (Aerial)", "Giant Punch (Aerial)", "Giant Punch (2)(Aerial)",
	"Headbutt (Ground)", "Headbutt (Aerial)", "Spinning Kong (Ground)",
	"Spinning Kong (Aerial)", "Hand Slap (Start)", "Hand Slap Loop",
	"Hand Slap End", "Hand Slap End 2", "Blaster Start (Ground)",
	"Blaster Loop (Ground)", "Blaster End (Ground)", "Blaster Start (Aerial)",
	"Blaster Loop (Aerial)", "Blaster End (Aerial)", "Fox Illusion Start (Ground)",
	"Fox Illusion (Ground)", "Fox Illusion End (Ground)", "Fox Illusion Start (Aerial)",
	"Fox Illusion (Aerial)", "Fox Illusion End (Aerial)", "Fire Fox Start (Ground)",
	"Fire Fox Start (Aerial)", "Fire Fox", "Fire Fox Landing",
	"Fire Fox Fall", "Fire Fox Bounce", "Reflector Start (Ground)",
	"Reflector Loop (Ground)", "Reflector Reflect (Ground)", "Reflector End (Ground)",
	"Reflector Start (Aerial)", "Reflector Loop (Aerial)", "Reflector Reflect (Aerial)",
	"Reflector End (Aerial)", "Chef (Ground)", "Chef (Aerial)",
	"Judge 1 (Ground)", "Judge 2 (Ground)", "Judge 3 (Ground)",
	"Judge 4 (Ground)", "Judge 5 (Ground)", "Judge 6 (Ground)",
	"Judge 7 (Ground)", "Judge 8 (Ground)", "Judge 9 (Ground)",
	"Judge 1 (Aerial)", "Judge 2 (Aerial)", "Judge 3 (Aerial)",
	"Judge 4 (Aerial)", "Judge 5 (Aerial)", "Judge 6 (Aerial)",
	"Judge 7 (Aerial)", "Judge 8 (Aerial)", "Judge 9 (Aerial)",
	"Fire (Ground)", "Fire (Aerial)", "Oil Panic (Ground)",
	"Oil Panic Absorb (Ground)", "Oil Panic Release (Ground)",  "Oil Panic (Aerial)",
    "Oil Panic Absorb (Aerial)", "Oil Panic Release (Aerial)",

};

const array<unsigned short int, 710> subaction_ids =
{
	0x029, 0x02A, 0x02B, 0x02C, 0x02E, 0x02F, 0x030, 0x031, 0x032, 0x033,
	0x034, 0x035, 0x036, 0x037, 0x038, 0x039, 0x040, 0x041, 0x042, 0x043,
	0x044, 0x045, 0x046, 0x047, 0x048, 0x0C7, 0x0C8, 0x0C9, 0x0CA, 0x0CB,
	0x0CC, 0x0DB, 0x0DC, 0x0DD, 0x0DE, 0x0DF, 0x0E0, 0x0E1, 0x0E2, 0x0E3,
	0x0E4, 0x0EF, 0x0F0, 0x0F2, 0x0F3, 0x0F5, 0x0F7, 0x0F8, 0x0F9, 0x0FA,
	0x12D, 0x12E, 0x12F, 0x130, 0x131, 0x132, 0x133, 0x134, 0x135, 0x136,
	0x137, 0x138, 0x139, 0x13A, 0x13B, 0x13C, 0x13B, 0x13C, 0x13D, 0x13E,
	0x13F, 0x140, 0x149, 0x14A, 0x14B, 0x14C, 0x14D, 0x14E, 0x14F, 0x150,
	0x127, 0x128, 0x129, 0x12A, 0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x130,
	0x131, 0x132, 0x133, 0x134, 0x135, 0x136, 0x137, 0x138, 0x139, 0x13A,
	0x13B, 0x13C, 0x13D, 0x13E, 0x13F, 0x140, 0x127, 0x128, 0x129, 0x12A,
	0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x130, 0x131, 0x132, 0x133, 0x134,
	0x135, 0x136, 0x137, 0x138, 0x139, 0x13A, 0x13B, 0x13C, 0x13D, 0x13E,
	0x13F, 0x140, 0x141, 0x142, 0x131, 0x132, 0x133, 0x13E, 0x13F, 0x142,
	0x143, 0x144, 0x145, 0x147, 0x148, 0x149, 0x14B, 0x14C, 0x14D, 0x14E,
	0x14F, 0x150, 0x151, 0x152, 0x153, 0x154, 0x155, 0x156, 0x157, 0x158,
	0x159, 0x15A, 0x15B, 0x15C, 0x15D, 0x15E, 0x15F, 0x160, 0x161, 0x162,
	0x163, 0x164, 0x165, 0x166, 0x167, 0x168, 0x169, 0x16A, 0x16B, 0x16C,
	0x16D, 0x16E, 0x16F, 0x170, 0x171, 0x172, 0x173, 0x174, 0x175, 0x176,
	0x177, 0x178, 0x179, 0x17A, 0x17B, 0x17C, 0x17D, 0x17E, 0x17F, 0x180,
	0x181, 0x182, 0x183, 0x184, 0x185, 0x186, 0x187, 0x188, 0x189, 0x18A,
	0x18B, 0x18C, 0x18D, 0x18E, 0x18F, 0x190, 0x191, 0x192, 0x193, 0x194,
	0x195, 0x196, 0x197, 0x198, 0x199, 0x19A, 0x19B, 0x19C, 0x19D, 0x19E,
	0x19F, 0x1A0, 0x1A1, 0x1A2, 0x1A3, 0x1A4, 0x1A5, 0x1A6, 0x1A7, 0x1A8,
	0x1A9, 0x1AA, 0x1AB, 0x1AC, 0x1AD, 0x1AE, 0x1AF, 0x1B0, 0x1B1, 0x1B2,
	0x1B3, 0x1B4, 0x1B5, 0x1B6, 0x1B7, 0x1B8, 0x1B9, 0x1BA, 0x1BB, 0x1BC,
	0x1BD, 0x1BE, 0x1BF, 0x1C0, 0x1C1, 0x1C2, 0x1C3, 0x1C4, 0x1C5, 0x1C6,
	0x1C7, 0x1C8, 0x1C9, 0x1CA, 0x1CB, 0x1CC, 0x1CD, 0x1CE, 0x1CF, 0x1D0,
	0x1D1, 0x1D2, 0x1D3, 0x1D4, 0x1D5, 0x1D6, 0x1D7, 0x1D8, 0x127, 0x128,
	0x129, 0x12A, 0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x130, 0x131, 0x132,
	0x133, 0x134, 0x135, 0x136, 0x137, 0x138, 0x139, 0x13A, 0x13B, 0x127,
	0x128, 0x129, 0x12A, 0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x130, 0x131,
	0x132, 0x133, 0x134, 0x135, 0x136, 0x137, 0x138, 0x139, 0x127, 0x128,
	0x129, 0x12A, 0x12B, 0x12C, 0x12D, 0x12E, 0x129, 0x130, 0x131, 0x132,
	0x133, 0x134, 0x135, 0x136, 0x137, 0x127, 0x128, 0x129, 0x12A, 0x12B,
	0x12C, 0x12D, 0x12E, 0x127, 0x128, 0x129, 0x12A, 0x12B, 0x12C, 0x12D,
	0x12E, 0x12F, 0x130, 0x131, 0x132, 0x133, 0x134, 0x135, 0x136, 0x137,
	0x138, 0x139, 0x13A, 0x13B, 0x13C, 0x13D, 0x13E, 0x13F, 0x140, 0x141,
	0x142, 0x143, 0x144, 0x145, 0x146, 0x127, 0x128, 0x129, 0x12A, 0x12B,
	0x12C, 0x12D, 0x12E, 0x12F, 0x130, 0x131, 0x132, 0x133, 0x134, 0x135,
	0x136, 0x137, 0x138, 0x139, 0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x130,
	0x131, 0x132, 0x133, 0x134, 0x135, 0x136, 0x137, 0x138, 0x139, 0x13A,
	0x13B, 0x13C, 0x13E, 0x13F, 0x140, 0x141, 0x142, 0x143, 0x144, 0x145,
	0x12D, 0x139, 0x13A, 0x13B, 0x12E, 0x12F, 0x130, 0x131, 0x132, 0x133,
	0x134, 0x135, 0x136, 0x137, 0x138, 0x127, 0x128, 0x129, 0x12A, 0x12B,
	0x12C, 0x12D, 0x12E, 0x12F, 0x130, 0x131, 0x132, 0x133, 0x134, 0x135,
	0x136, 0x137, 0x138, 0x139, 0x13A, 0x13B, 0x13C, 0x13D, 0x13E, 0x13F,
	0x127, 0x128, 0x129, 0x12A, 0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x132,
	0x133, 0x134, 0x137, 0x138, 0x12C, 0x12D, 0x12E, 0x12F, 0x130, 0x131,
	0x132, 0x133, 0x134, 0x135, 0x136, 0x137, 0x138, 0x139, 0x13A, 0x13B,
	0x13C, 0x13D, 0x13E, 0x13F, 0x140, 0x141, 0x142, 0x143, 0x144, 0x145,
	0x146, 0x129, 0x12A, 0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x130, 0x131,
	0x132, 0x133, 0x134, 0x135, 0x136, 0x137, 0x138, 0x127, 0x128, 0x129,
	0x12A, 0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x130, 0x131, 0x132, 0x133,
	0x134, 0x135, 0x136, 0x137, 0x138, 0x139, 0x127, 0x128, 0x129, 0x12A,
	0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x130, 0x131, 0x132, 0x133, 0x134,
	0x135, 0x136, 0x127, 0x128, 0x129, 0x12A, 0x12B, 0x12C, 0x12D, 0x12E,
	0x12F, 0x130, 0x131, 0x132, 0x133, 0x134, 0x135, 0x136, 0x137, 0x138,
	0x139, 0x13A, 0x13B, 0x13C, 0x127, 0x128, 0x129, 0x12A, 0x12B, 0x12C,
	0x12D, 0x12E, 0x12F, 0x130, 0x131, 0x132, 0x133, 0x134, 0x135, 0x136,
	0x137, 0x138, 0x139, 0x13A, 0x13B, 0x13C, 0x13D, 0x13E, 0x13F, 0x140,
	0x127, 0x128, 0x129, 0x12A, 0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x130,
	0x131, 0x132, 0x133, 0x134, 0x135, 0x136, 0x137, 0x138, 0x139, 0x127,
	0x128, 0x129, 0x12A, 0x12B, 0x12C, 0x12D, 0x12E, 0x127, 0x128, 0x129,
	0x12A, 0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x130, 0x131, 0x132, 0x133,
	0x134, 0x135, 0x136, 0x137, 0x138, 0x139, 0x13A, 0x13B, 0x13C, 0x13D,
	0x13E, 0x13F, 0x140, 0x141, 0x142, 0x143, 0x144, 0x145, 0x146, 0x127,
	0x128, 0x129, 0x12A, 0x12B, 0x12C, 0x12D, 0x12E, 0x12F, 0x130, 0x131,
	0x132, 0x133, 0x134, 0x135, 0x136, 0x137, 0x138, 0x139, 0x13A, 0x13B,
	0x13C, 0x13D, 0x13E, 0x13F, 0x12D, 0x12E, 0x12F, 0x130, 0x131, 0x132,
	0x133, 0x134, 0x135, 0x136, 0x137, 0x138, 0x139, 0x13A, 0x13B, 0x13C
};

vector<FSM> fsmList;
FSM fsm;

int main()
{
	

	return 0;
}